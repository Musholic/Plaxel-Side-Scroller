name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
          lfs: true
      - uses: lukka/get-cmake@latest
      - name: Restore from cache and setup vcpkg executable and data files.
        uses: lukka/run-vcpkg@v11
        with:
          doNotCache: false
      - name: Install deps
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          # We need a more recent version of mesa to avoid a segfault issue (c.f. https://gitlab.freedesktop.org/mesa/mesa/-/issues/9692)
          sudo add-apt-repository ppa:oibaf/graphics-drivers -y
          sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq libxinerama-dev libxcursor-dev \
          xorg-dev libglu1-mesa-dev pkg-config xpra mesa-vulkan-drivers vulkan-sdk vulkan-validationlayers-dev gcovr
      # Start the display early on or it may not be ready when we need it
      - name: Start xpra display
        run: xpra start :100
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2
      - name: Run build-wrapper
        run: build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --workflow --preset build
      - name: Run tests to generate coverage statistics
        run: |
          cd build/debug
          DISPLAY=:100.0 ./plaxel_test
      - name: Collect coverage into one XML report
        if: always()
        run: gcovr --sonarqube > coverage.xml
      - name: Run sonar-scanner
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.coverageReportPaths=coverage.xml
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test_report
          path: build/debug/test_report
          retention-days: 30
