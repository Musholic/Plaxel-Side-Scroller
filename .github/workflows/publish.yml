name: Publish
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  publish:
    name: Publish
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - uses: lukka/get-cmake@latest
      - name: Restore from cache and setup vcpkg executable and data files.
        uses: lukka/run-vcpkg@v11
        with:
          doNotCache: false
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang, SPIRV-Tools
          vulkan-use-cache: true
        if: runner.os == 'Windows'
      - name: Install deps
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq libxinerama-dev libxcursor-dev \
          xorg-dev libglu1-mesa-dev pkg-config xpra mesa-vulkan-drivers vulkan-sdk
        if: runner.os == 'Linux'
      # Start the display early on or it may not be ready when we need it
      - name: Start xpra display
        run: xpra start :100
        if: runner.os == 'Linux'
      - name: Run CMake
        uses: lukka/run-cmake@v10
        env:
          DISPLAY: ':100.0'
        with:
          workflowPreset: 'publish'
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: |
            build/release/Plaxel-*.zip
            build/release/Plaxel-*.tar.gz
          retention-days: 30